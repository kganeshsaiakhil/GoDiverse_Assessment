-- Add columns for task assignment and due date
ALTER TABLE todos ADD COLUMN assigned_to UUID REFERENCES auth.users NULL;
ALTER TABLE todos ADD COLUMN due_date TIMESTAMP WITH TIME ZONE NULL;
ALTER TABLE todos ADD COLUMN created_by UUID REFERENCES auth.users NOT NULL DEFAULT auth.uid();

-- Update the existing todos to set created_by to the current user_id
UPDATE todos SET created_by = user_id;

-- Create a notifications table for real-time notifications
CREATE TABLE notifications (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id UUID REFERENCES auth.users NOT NULL,
  task_id BIGINT REFERENCES todos(id) ON DELETE CASCADE,
  message TEXT NOT NULL,
  is_read BOOLEAN DEFAULT FALSE,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- Enable RLS on notifications
ALTER TABLE notifications ENABLE ROW LEVEL SECURITY;

-- Create policies for notifications
CREATE POLICY "Individuals can view their own notifications" ON notifications
  FOR SELECT USING (auth.uid() = user_id);
  
CREATE POLICY "Individuals can update their own notifications" ON notifications
  FOR UPDATE USING (auth.uid() = user_id);

-- Update RLS policies for todos to handle task assignments
DROP POLICY IF EXISTS "Individuals can view their own todos. " ON todos;
CREATE POLICY "Users can view todos they created or are assigned to" ON todos
  FOR SELECT USING (auth.uid() = created_by OR auth.uid() = assigned_to);

DROP POLICY IF EXISTS "Individuals can update their own todos." ON todos;
CREATE POLICY "Users can update todos they created or are assigned to" ON todos
  FOR UPDATE USING (auth.uid() = created_by OR auth.uid() = assigned_to);

-- Update the insert policy to set created_by
DROP POLICY IF EXISTS "Individuals can create todos." ON todos;
CREATE POLICY "Individuals can create todos and set assignments" ON todos
  FOR INSERT WITH CHECK (auth.uid() = created_by);